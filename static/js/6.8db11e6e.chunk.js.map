{"version":3,"sources":["components/NoDepended/EditibleField/EditModal.js","components/NoDepended/EditibleField/DeleteModal.js","components/NoDepended/EditibleField/EditibleField.js","components/Users/Users.js"],"names":["EditModal","state","Modal","centered","isOpen","this","props","modal","toggle","switch_modal","ModalBody","FormGroup","Label","className","eModalLabel","name","eName","value","eText","onChange","handleChange","Button","onClick","changeField","type","Component","DeleteModal","deleteField","EditibleField","editible","deleteble","update","addLabel","modalType","el","setState","prevState","currentTarget","getAttribute","console","log","axios","put","eApi","eParamId","then","r","isEditible","hasLabel","isDeletable","style","backgroundColor","bg","eLabel","color","icon","pancil","titlr","title","Users","Card","CardHeader","CardBody"],"mappings":"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","file":"static/js/6.8db11e6e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, FormGroup, Label,Modal, ModalBody  } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\n\nclass EditModal extends Component {\n  state = {};\n  render() {\n    return (\n      <>\n        <Modal\n          centered={true}\n          isOpen={this.props.modal}\n          toggle={this.props.switch_modal}\n        >\n          <ModalBody>\n            <AvForm>\n              <FormGroup>\n                <Label className=\"efield efield__modal-label\">\n                  Edit: {this.props.eModalLabel}?\n                </Label>\n                <AvField\n                  name={this.props.eName}\n                  value={this.props.eText}\n                  onChange={this.props.handleChange}\n                  className=\"efield efield__input\"\n                />\n              </FormGroup>\n            </AvForm>\n            <div className=\"efield efield__footer my-2 d-flex justify-content-end\">\n              <Button className=\"efield  efield__primary-btn \" onClick={this.props.changeField} >\n                Apply\n              </Button>\n              <Button\n                className=\"efield efield__cancel-btn \"\n                type=\"button\"\n                onClick={this.props.switch_modal}\n              >\n                Cancel\n              </Button>\n            </div>\n          </ModalBody>\n        </Modal>\n      </>\n    );\n  }\n}\nEditModal.propTypes = {\n  eText: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  eName: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  eTitle: PropTypes.string,\n  eModalLabel: PropTypes.string,\n  changeField: PropTypes.func.isRequired,\n\n};\n\nexport default EditModal;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, FormGroup, Label,Modal, ModalBody  } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\n\nclass DeleteModal extends Component {\n  state = {};\n  render() {\n    return (\n      <>\n        <Modal\n          centered={true}\n          isOpen={this.props.modal}\n          toggle={this.props.switch_modal}\n        >\n          <ModalBody>\n            <div>\n            <Label className=\"efield efield__modal-label\">\n                  Delete: {this.props.eName} ?\n                </Label>\n              </div>\n            <div className=\"efield efield__footer my-2 d-flex justify-content-end\">\n              <Button className=\"efield  efield__primary-btn \" onClick={this.props.deleteField} >\n                Delete\n              </Button>\n              <Button\n                className=\"efield efield__cancel-btn \"\n                type=\"button\"\n                onClick={this.props.switch_modal}\n              >\n                Cancel\n              </Button>\n            </div>\n          </ModalBody>\n        </Modal>\n      </>\n    );\n  }\n}\nDeleteModal.propTypes = {\n  eName: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  deleteField: PropTypes.func.isRequired,\n};\n\nexport default DeleteModal;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Icofont from \"react-icofont\";\nimport axios from \"./../../../services/axios\";\nimport EditModal from \"./EditModal\";\nimport DeleteModal from \"./DeleteModal\";\n\nclass EditibleField extends Component {\n  state = {\n    editible: true,\n    deleteble: false,\n    modal: false,\n    update: null,\n    addLabel: false,\n    modalType: null,\n  };\n  componentDidMount() {\n    if (this.props.isEditible === false) {\n      this.setState({ editible: false });\n    }\n    if (this.props.hasLabel === true) {\n      this.setState({ addLabel: true });\n    }\n    if (this.props.isDeletable === true) {\n      this.setState({ deleteble: true });\n    }\n  }\n\n  switch_modal = (el) => {\n    this.setState((prevState) => ({ modal: !prevState.modal }));\n    this.setState({ modalType: el.currentTarget.getAttribute(\"attr-type\") });\n    console.log(this.state.modalType);\n  };\n\n  handleChange = (el) => {\n    let { update } = this.state;\n    const { name, value } = el.currentTarget;\n    if (update === null) {\n      update = {};\n    }\n    update[name] = value;\n    this.setState({ update });\n  };\n\n  changeField = () => {\n    const { update } = this.state;\n    if (update !== null) {\n      axios\n        .put(`${this.props.eApi}/${this.props.eParamId}`, update)\n        .then((r) => this.setState({ update: null }));\n    }\n  };\n\n  deleteField = () => {};\n\n  render() {\n    return (\n      <>\n        <div className=\"efield__holder\">\n          <div\n            className=\"efield efield__container d-flex justify-content-lg-between align-items-end\"\n            style={{ backgroundColor: this.props.bg }}\n          >\n            <div className=\"d-flex flex-column \">\n              {this.state.addLabel === true && (\n                <>\n                  <div className=\"efield efield__label\">\n                    {this.props.eLabel}\n                  </div>\n                </>\n              )}\n\n              <div\n                className=\"efield efield__text\"\n                style={{ color: this.props.color }}\n              >\n                {this.props.eText}\n              </div>\n            </div>\n            <div className=\"efield efield__buttons d-flex\">\n              {this.state.editible === true && (\n                <div\n                  className=\"efield efield__button\"\n                  onClick={this.switch_modal}\n                  attr-type=\"edit\"\n                >\n                  <Icofont\n                    icon=\"edit-alt\"\n                    style={{ color: this.props.pancil }}\n                    className=\"efield__edit-btn\"\n                    titlr=\"edit\"\n                  ></Icofont>\n                </div>\n              )}\n\n              {this.state.deleteble === true && (\n                <div\n                  className=\"efield efield__button\"\n                  onClick={this.switch_modal}\n                  attr-type=\"del\"\n                >\n                  <Icofont\n                    icon=\"ui-delete\"\n                    className=\"efield__edit-btn efield__delete-btn efield\"\n                    title=\"edit\"\n                  ></Icofont>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"efield efield__modal\">\n          {this.state.modalType === \"edit\" && (\n            <>\n              <EditModal\n                switch_modal={this.switch_modal}\n                changeField={this.changeField}\n                eName={this.props.eName}\n                eText={this.props.eText}\n                handleChange={this.handleChange}\n                modal={this.state.modal}\n                eModalLabel={this.props.eModalLabel}\n              />\n            </>\n          )}\n\n          {this.state.modalType === \"del\" && (\n            <>\n              <DeleteModal\n                switch_modal={this.switch_modal}\n                deleteField={this.deleteField}\n                eName={this.props.eName}\n                modal={this.state.modal}\n              />\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nEditibleField.propTypes = {\n  eText: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  eName: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  bg: PropTypes.string,\n  pancil: PropTypes.string,\n  color: PropTypes.string,\n  eTitle: PropTypes.string,\n  eLabel: PropTypes.string,\n  eModalLabel: PropTypes.string,\n  isEditible: PropTypes.bool,\n  hasLabel: PropTypes.bool,\n  isDeletable: PropTypes.bool\n};\n\nexport default EditibleField;\n","import React, { Component } from \"react\";\nimport { Card, CardHeader, CardBody } from \"reactstrap\";\nimport EditibleField from \"../NoDepended/EditibleField\";\n\nclass Users extends Component {\n  state = {};\n  render() {\n    return (\n      <Card className=\"dark_card_border\">\n        <CardHeader>\n          <div className=\"main_title aacent_font\">Users of you server</div>\n        </CardHeader>\n        <CardBody>\n          {/* <ul className=\"info_list\">\n                <li className =\"info_list--item accent_font ml-0\"> \n                    <span className=\"info_list--item__value\">Some Office Name</span>\n                </li>\n                \n            </ul> */}\n          <EditibleField\n            eText=\"Some text\"\n            eName=\"some\"\n            eApi=\"test\"\n            eParamId=\"45\"\n            eLabel=\"Text Here\"\n            eModalLabel=\"Some Field\"\n            // isDeletable\n            // hasLabel\n            bg=\"rgb(0 0 0 / 14%)\"\n            // color = \"#\"\n            pancil=\"#0e70fa\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default Users;\n"],"sourceRoot":""}